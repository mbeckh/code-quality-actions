name: Test

on:
  push:
    branches: [ master, 'feature**', 'build' ]
    paths:
      - '.github/workflows/build.yml'
      - '.github/workflows/test.yml'
      - 'coverage/**'
      - 'dist/**'
      - 'report/**'
      - 'src/**'
      - 'test/**'
      - 'package*'
  pull_request:
    branches: [ master ]
    paths:
      - '.github/workflows/build.yml'
      - '.github/workflows/test.yml'
      - 'coverage/**'
      - 'dist/**'
      - 'report/**'
      - 'src/**'
      - 'test/**'
      - 'package*'

jobs:
  check:
    name: Build Required?
    runs-on: ubuntu-latest
    outputs:
      changed: ${{steps.check.outputs.changed}}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Check Changes
      id: check
      shell: bash
      run: |
        count=`git diff --name-only HEAD^ HEAD | grep -E "(^package.*)|(^src/)" | wc -l`
        echo "changed=$count" >> $GITHUB_OUTPUT
      
  build:
    needs: check
    if: needs.check.outputs.changed > 0
    uses: ./.github/workflows/build.yml
    secrets: inherit
    
  test:
    needs: build
    name: Get Coverage and Perform Static Analysis
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [ Debug, Release ]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup MSVC Environment
      uses:  mbeckh/msvc-dev-cmd@v1

    - name: Configure
      shell: cmd
      run: cmake -DCMAKE_BUILD_TYPE=${{matrix.configuration}} -G Ninja -S test -B build

    - name: Build
      shell: cmd
      working-directory: build
      run: cmake --build .

    - name: Coverage
      if: matrix.configuration == 'Debug'
      uses: ./coverage
      with:
        source-dir: test
        binary-dir: build
        codacy-token: ${{secrets.CODACY_PROJECT_API_TOKEN}}

    - name: Codecov
      if: matrix.configuration == 'Debug'
      uses: codecov/codecov-action@v3
      with:
        files: build/coverage-*.xml
        fail_ci_if_error: true

    - name: Report
      uses: ./report
      with:
        mode: partial
        source-dir: test
        binary-dir: build
        codacy-token: ${{secrets.CODACY_PROJECT_API_TOKEN}}

    - name: Save Logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.configuration}}-Logs
        path: |
            build/Testing/**/*.log
            build/clang-tidy-*.log

  final:
    name: Send Completion Message
    runs-on: windows-latest
    needs: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Report
      uses: ./report
      with:
        mode: final
        codacy-token: ${{secrets.CODACY_PROJECT_API_TOKEN}}
